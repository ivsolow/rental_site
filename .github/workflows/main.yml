name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
jobs:
  run_containers:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Compose
      run: |
        echo SECRET_KEY=${{ secrets.SECRET_KEY }} > .env.prod
        echo YOOKASSA_ACCOUNT_ID=${{ secrets.YOOKASSA_ACCOUNT_ID }} >> .env.prod
        echo YOOKASSA_SECRET_KEY=${{ secrets.YOOKASSA_SECRET_KEY }} >> .env.prod
        echo DB_HOST=${{ secrets.DB_HOST }} >> .env.prod
        echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env.prod
        echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env.prod
        echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env.prod
        echo CORS_BACKEND_ADDRESS=${{ secrets.CORS_BACKEND_ADDRESS }} >> .env.prod
        echo BACKEND_SERVER_IP=${{ secrets.BACKEND_SERVER_IP }} >> .env.prod
        echo BACKEND_SERVER_PORT=${{ secrets.BACKEND_SERVER_PORT }} >> .env.prod
        echo DJANGO_SETTINGS_MODULE=${{ secrets.DJANGO_SETTINGS_MODULE }} >> .env.prod

    - name: Debug env
      run: |
        cat .env.prod

    - name: run containers
      run: docker-compose -f docker-compose.ci.yml up --build -d
      
    - name: Sleep for 10 seconds
      run: sleep 10

    - name: Wait for Django to start
      run: |
        max_attempts=5
        attempts=0
        
        until docker logs django | grep "Creating django" || [ $attempts -eq $max_attempts ]; do
          echo "Waiting for Django to start..."
          sleep 5
          attempts=$((attempts + 1))
        done
        
        if [ $attempts -eq $max_attempts ]; then
          echo "Django did not start after $max_attempts attempts."
          exit 1
        fi

    - name: Run Tests
      run: |
        if docker exec -it django sh -c "pytest"; then
          echo "Tests passed successfully"
        else
          echo "Tests failed"
          exit 1
        fi



