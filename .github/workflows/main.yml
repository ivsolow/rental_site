name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
jobs:
  run_tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Compose
      run: |
        echo SECRET_KEY=${{ secrets.SECRET_KEY }} > .env.prod
        echo YOOKASSA_ACCOUNT_ID=${{ secrets.YOOKASSA_ACCOUNT_ID }} >> .env.prod
        echo YOOKASSA_SECRET_KEY=${{ secrets.YOOKASSA_SECRET_KEY }} >> .env.prod
        echo DB_HOST=${{ secrets.DB_HOST }} >> .env.prod
        echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env.prod
        echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env.prod
        echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env.prod
        echo CORS_BACKEND_ADDRESS=${{ secrets.CORS_BACKEND_ADDRESS }} >> .env.prod
        echo BACKEND_SERVER_IP=${{ secrets.BACKEND_SERVER_IP }} >> .env.prod
        echo BACKEND_SERVER_PORT=${{ secrets.BACKEND_SERVER_PORT }} >> .env.prod
        echo DJANGO_SETTINGS_MODULE=${{ secrets.DJANGO_SETTINGS_MODULE }} >> .env.prod

    - name: Debug env
      run: |
        cat .env.prod

    - name: run containers
      run: docker-compose -f docker-compose.ci.yml up --build -d
      
    - name: Sleep for 10 seconds
      run: sleep 15
      
    - name: Wait for Database to Start
      run: |
        max_attempts=3
        attempts=0
        until nc -zv rental_db 5432 || [ $attempts -eq $max_attempts ]; do
          echo "Waiting for the database to start..."
          sleep 2
          attempts=$((attempts + 1))
        done
        
    - name: Sleep for 5 seconds
      run: sleep 5
      
    - name: makemigrations
      run: docker exec django sh -c "python manage.py makemigrations"

    - name: Sleep for 5 seconds
      run: sleep 5

    - name: migrate
      run: docker exec django sh -c "python manage.py migrate"

    - name: Sleep for 5 seconds
      run: sleep 5
        
    - name: Run Tests
      run: |
        if docker exec django sh -c "pytest"; then
          echo "Tests passed successfully"
        else
          echo "Tests failed"
          exit 1
        fi

  check_pep8:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.7

    - name: Install PEP 8 linter
      run: pip install flake8

    - name: Run PEP 8 linter
      run: flake8

    - name: Check PEP 8 results
      run: |
        if [ $? -eq 0 ]; then
          echo "PEP 8 check passed successfully"
        else
          echo "PEP 8 check failed"
          exit 1
        fi


  deploy_on_server:
    runs-on: ubuntu-latest
    needs: run_tests

    steps:
    - name: Install sshpass
      run: sudo apt-get install -y sshpass

    - name: SSH and deploy
      run: |
        sshpass -p ${{ secrets.SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd /home/ivsolow/rental_site && git pull && docker-compose -f docker-compose.prod.yml down && docker-compose -f docker-compose.prod.yml up -d && docker image prune -f"

        # sshpass -p  "echo heeeyy!!"
        # "su ivsolow && cd ~/rental_site && git pull && docker-compose -f docker-compose.prod.yml down && docker-compose -f docker-compose.prod.yml up -d && docker image prune -f"

    #sshpass -p ${{ secrets.SSH_PASSWORD }} ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}
    # steps:
    # # - name: Checkout repository
    # #   uses: actions/checkout@v2

    # - name: SSH and deploy
    #   uses: appleboy/ssh-action@v1.0.0
    #   with:
    #     host: ${{ secrets.SSH_HOST }}
    #     username: ${{ secrets.USER }}
    #     password: ${{ secrets.SSH_PASSWORD }}
    #     script: |
    #       su ivsolow
    #       cd ~/rental_site
    #       git pull
    #       docker-compose -f docker-compose.prod.yml down
    #       docker-compose -f docker-compose.prod.yml up -d
    #       docker image prune -f
    
    # - name: SSH Login
    #   run: |
    #       echo "$SSH_PRIVATE_KEY" > ssh_key
    #       chmod 600 ssh_key
    #       ssh -i ssh_key ivsolow@31.129.104.187
    #       sshpass -p ${{ secrets.SSH_PASSWORD }} ssh ${{ secrets.SSH_LOGIN }}
      

    # - name: Switch to user ivsolow
    #   run: su ivsolow

    # - name: Change to project directory and git pull
    #   run: cd ~/rental_site && git pull

    # - name: Docker-compose down
    #   run: docker-compose -f docker-compose.prod.yml down

    # - name: Rebuild containers
    #   run: docker-compose -f docker-compose.prod.yml up -d

    # - name: Prune Docker Images
    #   run: docker image prune -f


